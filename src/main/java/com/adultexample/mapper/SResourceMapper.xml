<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adultexample.mapper.SResourceMapper">
  <resultMap id="BaseResultMap" type="com.adultexample.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resourceName" jdbcType="VARCHAR" property="resourcename" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    id, resourceName, url, pid, sort, icon
  </sql>
  <select id="selectByExample" parameterType="com.adultexample.pojo.SResourceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.adultexample.pojo.SResourceKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.adultexample.pojo.SResourceKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    delete from s_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.adultexample.pojo.SResourceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    delete from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.adultexample.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    insert into s_resource (id, resourceName, url, 
      pid, sort, icon)
    values (#{id,jdbcType=INTEGER}, #{resourcename,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.adultexample.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    insert into s_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resourcename != null">
        resourceName,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resourcename != null">
        #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.adultexample.pojo.SResourceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    select count(*) from s_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    update s_resource
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.resourcename != null">
        resourceName = #{record.resourcename,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    update s_resource
    set id = #{record.id,jdbcType=INTEGER},
      resourceName = #{record.resourcename,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.adultexample.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    update s_resource
    <set>
      <if test="resourcename != null">
        resourceName = #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adultexample.pojo.SResource">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 21 18:09:01 CST 2020.
    -->
    update s_resource
    set resourceName = #{resourcename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- ....................................................... -->
	<resultMap type="com.adultexample.manager.dto.TreeNodeDto" id="map1">
		<result column="name" property="name" />
		<result column="open" property="open" />
		<collection property="children" ofType="treenode">
			<result column="childname" property="name" />
		</collection>
	</resultMap>
	<!--异步请求时 -->
	<select id="selectAll" resultMap="map1">
		select a.resourcename as name,
		true as open,b.resourcename as childname from (select * from
		s_resource where pid=0)a left join (select * from s_resource where pid
		!=0) b on a.id=b.pid
		order by a.sort ,b.sort
	</select>
	<!--给角色添加资源的时候 -->
	<select id="selectRes" resultType="TreeNode" parameterType="int">
		select a.id,a.pid pId,a.sort,resourcename name,
		case when pid=0 then
		true else false end open,
		case when b.id is null then false else true
		end checked
		from
		s_resource a
		left join
		(select * from s_roleresource
		where
		roleId=#{roleId })b on a.id=b.resourceId
		order by a.sort
	</select>

	<insert id="insertSroleResource" parameterType="map">
		insert into
		s_roleResource(roleid,resourceid) values(#{roleId},#{resourceId})
	</insert>
	<delete id="deleteSroleResource" parameterType="map">
		delete from
		s_roleResource where roleid=#{roleId} and resourceid=#{resourceId}
	</delete>
	<!--查看数据库中是否有 -->
	<select id="selectSroleResource" parameterType="map" resultType="int">
		select count(*) from s_roleResource where roleid=#{roleId} and
		resourceid=#{resourceId}
	</select>
	<!--查询是否存在兄弟 使用循环 -->
	<select id="selectBrother" parameterType="map" resultType="int">
		select count(*) from s_roleresource where roleid=#{roleId} and
		resourceId in(select id from s_resource where pid=#{resourceId})
	</select>


	<!--查询权限表中是否存在父节点 -->
	<select id="selectParent" parameterType="map" resultType="int">
		select
		count(*) from s_roleresource where roleid=#{roleId} and
		resourceid=#{pid}
	</select>
	<!--查询权限表中是否存在 其他子节点 -->
	<select id="selectOtherChild" parameterType="map" resultType="int">
		select count(*) from s_roleresource where roleid=#{roleId} and
		resourceid in (select id from s_resource where pid=#{pid})
	</select>

	<!--删除父与子资源 -->
	<delete id="deleteParentChild" parameterType="map">
		delete from
		s_roleresource where resourceid in (select id from s_resource where
		id=#{resourceId } or pid=#{resourceId} ) and roleid=#{roleId}
	</delete>

	<!--添加父与子 -->
	<insert id="insertParentChild" parameterType="map">
		insert into
		s_roleresource (roleid,resourceid) select ${roleId},id from s_resource
		where id=#{resourceId } or pid=#{resourceId }
	</insert>
	<!--获取资源列表 -->
	<resultMap type="com.adultexample.dto.LoginDataDto" id="resList">
		<id column="resourceName" property="title"/>
		<result column="url" property="href"/>
		<result column="icon" property="icon"/>
		<result column="spread" property="spread"/>
		<collection property="children" ofType="LoginData">
			<result column="cname" property="title"/>
			<result column="curl" property="href"/>
			<result column="cicon" property="icon"/>
			<result column="spread" property="spread"/>
		</collection>
	</resultMap>
	<select id="selectResList" parameterType="int" resultMap="resList">
	select *,false spread from
	(select * from	
		(select id, resourceName,url,pid,icon from s_resource where pid =0)a left join 
		(select id ids,roleId,resourceId from s_roleresource)b on a.id=b.resourceId)c left join 
		(select pid,resourceName cname,url curl,icon cicon,sort from s_resource)e on e.pid =c.id 
	
	 where c.roleId=#{id}
		
		order by sort
	</select>
</mapper>